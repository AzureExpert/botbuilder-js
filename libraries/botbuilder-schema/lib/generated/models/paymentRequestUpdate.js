/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * An update to a payment request
 *
 */
class PaymentRequestUpdate {
  /**
   * Create a PaymentRequestUpdate.
   * @member {string} [id] ID for the payment request to update
   * @member {object} [details] Update payment details
   * @member {object} [details.total] Contains the total amount of the payment
   * request
   * @member {string} [details.total.label] Human-readable description of the
   * item
   * @member {object} [details.total.amount] Monetary amount for the item
   * @member {string} [details.total.amount.currency] A currency identifier
   * @member {string} [details.total.amount.value] Decimal monetary value
   * @member {string} [details.total.amount.currencySystem] Currency system
   * @member {boolean} [details.total.pending] When set to true this flag means
   * that the amount field is not final.
   * @member {array} [details.displayItems] Contains line items for the payment
   * request that the user agent may display
   * @member {array} [details.shippingOptions] A sequence containing the
   * different shipping options for the user to choose from
   * @member {array} [details.modifiers] Contains modifiers for particular
   * payment method identifiers
   * @member {string} [details.error] Error description
   * @member {object} [shippingAddress] Updated shipping address
   * @member {string} [shippingAddress.country] This is the CLDR (Common Locale
   * Data Repository) region code. For example, US, GB, CN, or JP
   * @member {array} [shippingAddress.addressLine] This is the most specific
   * part of the address. It can include, for example, a street name, a house
   * number, apartment number, a rural delivery route, descriptive
   * instructions, or a post office box number.
   * @member {string} [shippingAddress.region] This is the top level
   * administrative subdivision of the country. For example, this can be a
   * state, a province, an oblast, or a prefecture.
   * @member {string} [shippingAddress.city] This is the city/town portion of
   * the address.
   * @member {string} [shippingAddress.dependentLocality] This is the dependent
   * locality or sublocality within a city. For example, used for
   * neighborhoods, boroughs, districts, or UK dependent localities.
   * @member {string} [shippingAddress.postalCode] This is the postal code or
   * ZIP code, also known as PIN code in India.
   * @member {string} [shippingAddress.sortingCode] This is the sorting code as
   * used in, for example, France.
   * @member {string} [shippingAddress.languageCode] This is the BCP-47
   * language code for the address. It's used to determine the field separators
   * and the order of fields when formatting the address for display.
   * @member {string} [shippingAddress.organization] This is the organization,
   * firm, company, or institution at this address.
   * @member {string} [shippingAddress.recipient] This is the name of the
   * recipient or contact person.
   * @member {string} [shippingAddress.phone] This is the phone number of the
   * recipient or contact person.
   * @member {string} [shippingOption] Updated shipping options
   */
  constructor() {
  }

  /**
   * Defines the metadata of PaymentRequestUpdate
   *
   * @returns {object} metadata of PaymentRequestUpdate
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PaymentRequestUpdate',
      type: {
        name: 'Composite',
        className: 'PaymentRequestUpdate',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          details: {
            required: false,
            serializedName: 'details',
            type: {
              name: 'Composite',
              className: 'PaymentDetails'
            }
          },
          shippingAddress: {
            required: false,
            serializedName: 'shippingAddress',
            type: {
              name: 'Composite',
              className: 'PaymentAddress'
            }
          },
          shippingOption: {
            required: false,
            serializedName: 'shippingOption',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PaymentRequestUpdate;
