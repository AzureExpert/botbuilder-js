/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Provides information about the requested transaction
 *
 */
class PaymentDetails {
  /**
   * Create a PaymentDetails.
   * @member {object} [total] Contains the total amount of the payment request
   * @member {string} [total.label] Human-readable description of the item
   * @member {object} [total.amount] Monetary amount for the item
   * @member {string} [total.amount.currency] A currency identifier
   * @member {string} [total.amount.value] Decimal monetary value
   * @member {string} [total.amount.currencySystem] Currency system
   * @member {boolean} [total.pending] When set to true this flag means that
   * the amount field is not final.
   * @member {array} [displayItems] Contains line items for the payment request
   * that the user agent may display
   * @member {array} [shippingOptions] A sequence containing the different
   * shipping options for the user to choose from
   * @member {array} [modifiers] Contains modifiers for particular payment
   * method identifiers
   * @member {string} [error] Error description
   */
  constructor() {
  }

  /**
   * Defines the metadata of PaymentDetails
   *
   * @returns {object} metadata of PaymentDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PaymentDetails',
      type: {
        name: 'Composite',
        className: 'PaymentDetails',
        modelProperties: {
          total: {
            required: false,
            serializedName: 'total',
            type: {
              name: 'Composite',
              className: 'PaymentItem'
            }
          },
          displayItems: {
            required: false,
            serializedName: 'displayItems',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PaymentItemElementType',
                  type: {
                    name: 'Composite',
                    className: 'PaymentItem'
                  }
              }
            }
          },
          shippingOptions: {
            required: false,
            serializedName: 'shippingOptions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PaymentShippingOptionElementType',
                  type: {
                    name: 'Composite',
                    className: 'PaymentShippingOption'
                  }
              }
            }
          },
          modifiers: {
            required: false,
            serializedName: 'modifiers',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PaymentDetailsModifierElementType',
                  type: {
                    name: 'Composite',
                    className: 'PaymentDetailsModifier'
                  }
              }
            }
          },
          error: {
            required: false,
            serializedName: 'error',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PaymentDetails;
