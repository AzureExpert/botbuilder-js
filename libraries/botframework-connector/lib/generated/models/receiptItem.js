/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * An item on a receipt card
 *
 */
class ReceiptItem {
  /**
   * Create a ReceiptItem.
   * @member {string} [title] Title of the Card
   * @member {string} [subtitle] Subtitle appears just below Title field,
   * differs from Title in font styling only
   * @member {string} [text] Text field appears just below subtitle, differs
   * from Subtitle in font styling only
   * @member {object} [image] Image
   * @member {string} [image.url] URL thumbnail image for major content
   * property
   * @member {string} [image.alt] Image description intended for screen readers
   * @member {object} [image.tap] Action assigned to specific Attachment
   * @member {string} [image.tap.type] The type of action implemented by this
   * button. Possible values include: 'openUrl', 'imBack', 'postBack',
   * 'playAudio', 'playVideo', 'showImage', 'downloadFile', 'signin', 'call',
   * 'payment', 'messageBack'
   * @member {string} [image.tap.title] Text description which appears on the
   * button
   * @member {string} [image.tap.image] Image URL which will appear on the
   * button, next to text label
   * @member {string} [image.tap.text] Text for this action
   * @member {string} [image.tap.displayText] (Optional) text to display in the
   * chat feed if the button is clicked
   * @member {object} [image.tap.value] Supplementary parameter for action.
   * Content of this property depends on the ActionType
   * @member {string} [price] Amount with currency
   * @member {string} [quantity] Number of items of given kind
   * @member {object} [tap] This action will be activated when user taps on the
   * Item bubble.
   * @member {string} [tap.type] The type of action implemented by this button.
   * Possible values include: 'openUrl', 'imBack', 'postBack', 'playAudio',
   * 'playVideo', 'showImage', 'downloadFile', 'signin', 'call', 'payment',
   * 'messageBack'
   * @member {string} [tap.title] Text description which appears on the button
   * @member {string} [tap.image] Image URL which will appear on the button,
   * next to text label
   * @member {string} [tap.text] Text for this action
   * @member {string} [tap.displayText] (Optional) text to display in the chat
   * feed if the button is clicked
   * @member {object} [tap.value] Supplementary parameter for action. Content
   * of this property depends on the ActionType
   */
  constructor() {
  }

  /**
   * Defines the metadata of ReceiptItem
   *
   * @returns {object} metadata of ReceiptItem
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ReceiptItem',
      type: {
        name: 'Composite',
        className: 'ReceiptItem',
        modelProperties: {
          title: {
            required: false,
            serializedName: 'title',
            type: {
              name: 'String'
            }
          },
          subtitle: {
            required: false,
            serializedName: 'subtitle',
            type: {
              name: 'String'
            }
          },
          text: {
            required: false,
            serializedName: 'text',
            type: {
              name: 'String'
            }
          },
          image: {
            required: false,
            serializedName: 'image',
            type: {
              name: 'Composite',
              className: 'CardImage'
            }
          },
          price: {
            required: false,
            serializedName: 'price',
            type: {
              name: 'String'
            }
          },
          quantity: {
            required: false,
            serializedName: 'quantity',
            type: {
              name: 'String'
            }
          },
          tap: {
            required: false,
            serializedName: 'tap',
            type: {
              name: 'Composite',
              className: 'CardAction'
            }
          }
        }
      }
    };
  }
}

module.exports = ReceiptItem;
